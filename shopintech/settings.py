"""
Django settings for shopintech project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$#5@#u%x=-(rwc+fj@xo9of96lxs+&n9=2kyeogjw&7zc0oa9w'

# Clés API Stripe
STRIPE_PUBLIC_KEY = "pk_test_51Qx7njD3bQ3Mp1Wyazs0PGhZiZfh1HEE7I6j3vaAPwUbz0tYf7NPEFQRUjxG7J9talVYAi3XOSc91rLv2umPGAhz00B4oKmFXA"  # Remplace par ta clé publique
STRIPE_SECRET_KEY = "sk_test_51Qx7njD3bQ3Mp1WypRXxbWnmuSEjKV3I26UtZYN4GheTuxFPpI1dE1c9qr2auTqmYv355anZKjjxbquW5Lg5a1yr007T0dO22Z"  # Remplace par ta clé secrèt

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['shopintech.fr', 'www.shopintech.fr']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'produits',  # Ajout de l'application produits
    "channels",  # ✅ Ajout de Django Channels
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "produits.middleware.breadcrumbs.BreadcrumbsMiddleware",  # ✅ Ajout du middleware
    "produits.middleware.historique.HistoriqueNavigationMiddleware",  # ✅ Ajout ici
]

ROOT_URLCONF = 'shopintech.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shopintech.wsgi.application'

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # ✅ Stocke les messages en mémoire
    },
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Langue française
LANGUAGE_CODE = 'fr'

# Fuseau horaire pour la France
TIME_ZONE = 'Europe/Paris'

# Activer la localisation pour les formats de dates et heures
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'
LOGIN_URL = '/login/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Configuration SMTP pour l'envoi d'emails (exemple avec Gmail)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Serveur SMTP de Gmail
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'impression.cis@gmail.com'  # Remplace par ton email
EMAIL_HOST_PASSWORD = 'mdyq dqrq ygnz qchr'  # ⚠️ Ne pas mettre ça en production, utiliser des variables d'environnement
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 86400  # ✅ 24 heures de session
SESSION_SAVE_EVERY_REQUEST = True  # ✅ Sauvegarde la session à chaque requête
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # ❌ Ne pas perdre la session si l'utilisateur ferme le navigateur

# Sécurité CSRF
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000']
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SECURE = False  # ✅ Mettre False en local
SESSION_COOKIE_SECURE = False  # ✅ Mettre False en local

LOGIN_REDIRECT_URL = '/'


